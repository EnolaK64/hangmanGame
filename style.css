body {
    display: flex;
    justify-content: center;
    margin: 0px;
    font-family: "Space Mono", sans-serif;
    transition: 0.3s;
}

body[data-theme=dark] {
    background-color: #313338;
}

body[data-theme=light] {
    background-color: #fff;
}

button {
    font-family: "Space Mono", sans-serif;

}

.other {
    align-self: self-start;
}

#game {
    bottom: 50px;
    position: fixed;
    display: flex;
    width: 500px;
    height: auto;
    flex-wrap: wrap;
    align-items: center;
    align-content: center;
    justify-content: center;
}

#guess {
    display: flex;
    position: absolute;
    z-index: 100;
    height: 46px;
    background-color: #404eed;
    padding-left: 5px;
    padding-top: 5px;
    padding-bottom: 15px;
    border-radius: 5px;
    bottom: 312px;
    animation: guess 0.5s ease-in-out 0s 1 normal none;
}

#keyboard {
    display: grid;
    grid-template-columns: repeat(20, 18px);
    grid-template-rows: repeat(6, 18px);
    grid-column-gap: 0px;
    grid-row-gap: 0px;
    position: absolute;
    bottom: 0px;
    z-index: 10;

}

.letter {
    /* position: relative;   */
    /* top: 50px;   */
    color: #FFF;
    font-size: 32px;
    align-self: center;
    padding: 5px;
    padding-bottom: 0px;
    border-bottom: 5px #FFF solid;
    margin: 0px;
    margin-right: 5px;
    font-family: "Space Mono";
}

#hangman {
    position: fixed;
    bottom: 650px;
    left: calc(50vw - 100px);
    align-self: center;
    z-index: 5;
}

.parts {
    position: absolute;
    width: 200px;
    height: auto;
    display: none;
    z-index: 5;
}

body[data-theme=dark]>#hangman>.parts {
    fill: #FFF;
}


body[data-theme=light]>#hangman>.parts {
    fill: #000;
}

.key {
    border: 0px;
    transition: 0.3s;
    font-size: 18px;
    border-radius: 5px;
    margin: 1px;
    z-index: 10;
    outline: none;

    animation: down 0.5s ease-in-out 0s 1 normal none;
}

body[data-theme=dark]>#game>#keyboard>.key {
    background-color: #1e1f22;
    color: #fff;
}

body[data-theme=light]>#game>#keyboard>.key {
    background-color: #e3e5e8;
    color: #000;
}

body[data-theme=dark]>#game>#keyboard>.key[data-state=used] {
    background-color: #2c2f33;
    color: #555555;
}

body[data-theme=light]>#game>#keyboard>.key[data-state=used] {
    background-color: #F4F6F9;
    color: #aaa;
}


.key[data-state=playble]:hover {
    box-shadow: 0px 0px 15px rgba(0, 0, 0, .5);
    z-index: 1000;
    transform: translate3d(0px, 0px, 10px);
    transform: scale(1.2);
}

.key[data-state=playble]:active:hover {
    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0);
    transform: translate3d(0px, 0px, 10px);
    transform: scale(1);
}

#title {
    display: flex;
    justify-content: center;
    position: fixed;
    top: 50px;
    width: 300px;
}

.end {
    font-size: 32px;
    position: fixed;
    display: none;
}

body[data-theme=dark] > #title > .end {
    color: #FFF;
}

body[data-theme=light] > #title > .end {
    color: #000;
}

/* .played {
    color: #555;
    background-color: #313338;
} */

#themeSelector {
    border-radius: 5px;
    position: fixed;
    right: 10px;
    top: 10px;
}



.theme {
    width: 32px;
    height: auto;
    display: none;
}

#sun {
    fill: #FFF;
}

#moon {
    fill: #000;
}

body[data-theme=dark]>#themeSelector>#sun {
    display: block;
}

body[data-theme=light]>#themeSelector>#moon {
    display: block;
}

#replay {
    display: flex;
    bottom: 120px;
    position: absolute;
    border: 0px;
    border-radius: 5px;
    font-size: 16px;
    justify-content: center;
    padding: 5px;
    transition: 0.3s;
    animation: down 0.5s ease-in-out 0s 1 normal none;
}


#replayIcon {
    position: relative;
    width: 22px;
    height: auto;
    margin-right: 5px;
}

#replay:hover>#replayIcon {
    animation: icon 2s ease 0.5 normal none;
    animation-iteration-count: 1;
}



body[data-theme=dark]>#game>#replay {
    background-color: #99aab5;
}

body[data-theme=light]>#game>#replay {
    background-color: #e6e6e8;
}


#replay :hover {
    box-shadow: 8px 15px rgba(0, 0, 0, .5)"

}

footer {
    position: fixed;
    bottom: 10px;
    left: 10px;
    display: inline;
}

#licence {
    width: auto;
    height: 30px;
}

.github {
    width: 30px;
    height: auto;
    display: none;
}

a {
    text-decoration: none;
}

body[data-theme=dark]>footer>a>#githubMarkWhite {
    display: inline;
}

body[data-theme=light]>footer>a>#githubMark {
    display: inline;
}

/* key frames */
@keyframes down {
    from {
        transform: translate(0px, 300px);
    }
}

@keyframes icon {
    from {
        transform: rotate(-90deg);
    }

    50% {
        transform: rotate(-1110deg);
    }

    to {
        transform: rotate(-1080deg);
    }
}

@keyframes guess {
    from {
        transform: translateY(-420px);
    }
}



@media screen and (min-width: 768px) {
    #keyboard {
        grid-template-columns: repeat(20, 32px);
        grid-template-rows: repeat(6, 32px);
        margin-top: 300px;
    }

    .parts {
        position: fixed;
        width: 25vw;
        max-width: 400px;
        height: auto;
        /* overflow: visible; */
    }

    #guess {
        padding-bottom: 45px;
        bottom: 50vh;
    }

    .letter {
        font-size: 64px;
    }

    .key {
        font-size: 32px;
    }

    #hangman {
        left: 10px;
        bottom: 95vh;
    }


    #replay {
        bottom: 203px;
        cursor: pointer;
        box-shadow: 0px 0px;
    }
}



#a {
    grid-area: 1 / 1 / 3 / 3;
    margin-left: 0px;
}

#z {
    grid-area: 1 / 3 / 3 / 5;
}

#e {
    grid-area: 1 / 5 / 3 / 7;
}

#r {
    grid-area: 1 / 7 / 3 / 9;
}

#t {
    grid-area: 1 / 9 / 3 / 11;
}

#y {
    grid-area: 1 / 11 / 3 / 13;
}

#u {
    grid-area: 1 / 13 / 3 / 15;
}

#i {
    grid-area: 1 / 15 / 3 / 17;
}

#o {
    grid-area: 1 / 17 / 3 / 19;
}

#p {
    grid-area: 1 / 19 / 3 / 21;
}

#q {
    grid-area: 3 / 2 / 5 / 4;
}

#s {
    grid-area: 3 / 4 / 5 / 6;
}

#d {
    grid-area: 3 / 6 / 5 / 8;
}

#f {
    grid-area: 3 / 8 / 5 / 10;
}

#g {
    grid-area: 3 / 10 / 5 / 12;
}

#h {
    grid-area: 3 / 12 / 5 / 14;
}

#j {
    grid-area: 3 / 14 / 5 / 16;
}

#k {
    grid-area: 3 / 16 / 5 / 18;
}

#l {
    grid-area: 3 / 18 / 5 / 20;
}

#m {
    grid-area: 5 / 15 / 7 / 17;
}

#w {
    grid-area: 5 / 3 / 7 / 5;
}

#x {
    grid-area: 5 / 5 / 7 / 7;
}

#c {
    grid-area: 5 / 7 / 7 / 9;
}

#v {
    grid-area: 5 / 9 / 7 / 11;
}

#b {
    grid-area: 5 / 11 / 7 / 13;
}

#n {
    grid-area: 5 / 13 / 7 / 15;
}